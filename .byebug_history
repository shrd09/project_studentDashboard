quit
params[:user][:role]
user.authenticate(params[:user][:password])
user
 user && user.authenticate(params[:user][:password]) && user.role.to_s == params[:user][:role].to_s
quit
exit
 user.role.to_s == params[:user][:role]
user.authenticate(params[:user][:password])
user && user.authenticate(params[:user][:password]) && user.role.to_s == params[:user][:role]
 user
User Data: #{user.as_json(only: [:id, :email, :role])}
exit
Sessions
decoded
decoded.first['user_id']
c
Enrollment.exists?(user_id: user_id, course_id: course_id)
c
generate_token(user.id)
user.id
user
c
params
user
User
user.id
